{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ansible/cf_templates/json/vpc.json",

    "Parameters": {
        "region": {
            "Description": "AWS region",
            "Type": "String"
        },

        "hostedZoneName": {
            "Description": "Hosted zone name",
            "Type": "String"
        },

        "vpcCidr": {
            "Description": "VPC CIDR block",
            "Type": "String"
        },

        "vpcEnv": {
            "Description": "VPC environment string",
            "Type": "String"
        },

        "appSubnets": {
            "Description": "Application subnet CIDR blocks",
            "Type": "CommaDelimitedList"
        },

        "dataSubnets": {
            "Description": "Data subnet CIDR blocks",
            "Type": "CommaDelimitedList"
        },

        "serviceSubnets": {
            "Description": "Service subnet CIDR blocks",
            "Type": "CommaDelimitedList"
        },

        "sshKey": {
            "Description": "EC2 instance SSH key",
            "Type": "String"
        },

        "business": {
            "Description": "Business owner of resource",
            "Type": "String"
        },

        "mgmtVpcId": {
            "Description": "Logical ID of Management VPC",
            "Type": "String"
        },

        "mgmtVpcCidr": {
            "Description": "CIDR address of Management VPC",
            "Type": "String"
        },

        "mgmtVpcPrivateRouteTable": {
            "Description": "Private route table of Management VPC",
            "Type": "String"
        },

        "mgmtVpcPublicRouteTable": {
            "Description": "Public route table of Management VPC",
            "Type": "String"
        }

    },

    "Conditions": {
        "DevQaVpc": { "Fn::Equals": [ { "Ref": "vpcEnv" }, "devqa" ] },
        "UatProdVpc": { "Fn::Equals": [ { "Ref": "vpcEnv" }, "uatprod" ] },
        "CreateMgmtPeering": { "Fn::Or": [ { "Condition": "DevQaVpc" }, { "Condition": "UatProdVpc" } ] }
    },

    "Resources": {
        "Vpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "vpcCidr" },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "vpc", { "Ref": "vpcEnv" } ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "DevHostedZone": {
            "Condition": "DevQaVpc",
            "Type" : "AWS::Route53::HostedZone",
            "Properties" : {
                "Name": { "Fn::Join": [".", [ "dev", { "Ref": "hostedZoneName" } ] ] },
                "VPCs": [ { "VPCId": { "Ref": "Vpc" }, "VPCRegion": { "Ref": "region" } } ]
            }
        },

        "QaHostedZone": {
            "Condition": "DevQaVpc",
            "Type" : "AWS::Route53::HostedZone",
            "Properties" : {
                "Name": { "Fn::Join": [".", [ "qa", { "Ref": "hostedZoneName" } ] ] },
                "VPCs": [ { "VPCId": { "Ref": "Vpc" }, "VPCRegion": { "Ref": "region" } } ]
            }
        },

        "AppSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "a" ] ] },
                "CidrBlock": { "Fn::Select": [ "0", { "Ref": "appSubnets" } ] },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "appsubnet", { "Ref": "vpcEnv" }, "a" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "AppSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "b" ] ] },
                "CidrBlock": { "Fn::Select": [ "1", { "Ref": "appSubnets" } ] },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "appsubnet", { "Ref": "vpcEnv" }, "b" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "DataSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "a" ] ] },
                "CidrBlock": { "Fn::Select": [ "0", { "Ref": "dataSubnets" } ] },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "datasubnet", { "Ref": "vpcEnv" }, "a" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "DataSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "b" ] ] },
                "CidrBlock": { "Fn::Select": [ "1", { "Ref": "dataSubnets" } ] },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "datasubnet", { "Ref": "vpcEnv" }, "b" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "ServiceSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "a" ] ] },
                "CidrBlock": { "Fn::Select": [ "0", { "Ref": "serviceSubnets" } ] },
                "MapPublicIpOnLaunch": "True",
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "servicesubnet", { "Ref": "vpcEnv" }, "a" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "ServiceSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Join": ["", [ { "Ref": "region" }, "b" ] ] },
                "CidrBlock": { "Fn::Select": [ "1", { "Ref": "serviceSubnets" } ] },
                "VpcId": { "Ref": "Vpc" },
                "MapPublicIpOnLaunch": "True",
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "servicesubnet", { "Ref": "vpcEnv" }, "b" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "internetgateway", { "Ref": "vpcEnv" } ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "InternetGatewayAttachment": {
            "DependsOn": "InternetGateway",
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": { "Ref": "InternetGateway" },
                "VpcId": { "Ref": "Vpc" }
            }
        },

        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "routetable", { "Ref": "vpcEnv" }, "public" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "PublicRoute": {
            "DependsOn": [ "InternetGateway", "InternetGatewayAttachment" ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "PublicRouteTable" },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": { "Ref": "InternetGateway" }
            }
        },

        "ServiceSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "ServiceSubnetA" },
                "RouteTableId": { "Ref": "PublicRouteTable" }
            }
        },

        "ServiceSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "ServiceSubnetB" },
                "RouteTableId": { "Ref": "PublicRouteTable" }
            }
        },

        "NatSecurityGroup": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "NAT security group",
                "VpcId": { "Ref": "Vpc" },
                "SecurityGroupIngress": [
                    { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": { "Ref": "vpcCidr" } },
                    { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": { "Ref": "vpcCidr" } },
                    { "IpProtocol": "icmp", "FromPort": "8", "ToPort": "-1", "CidrIp": { "Ref": "vpcCidr" } },
                    { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "122.55.14.126/32" }
                ],
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "natsg", { "Ref": "vpcEnv" } ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "NatInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-4ddb0c2e",
                "InstanceType": "t2.micro",
                "KeyName": { "Ref": "sshKey" },
                "SecurityGroupIds": [ { "Ref": "NatSecurityGroup" } ],
                "SourceDestCheck": "false",
                "SubnetId": { "Ref": "ServiceSubnetA" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "nat", { "Ref": "vpcEnv" } ] ] } },
                    { "Key": "vpc_env", "Value": { "Ref": "vpcEnv" } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ],
                "UserData": { "Fn::Base64": { "Fn::Join": ["", [
                    "#!/bin/bash\n",
                    "useradd -m releaseph\n",
                    "cp -rp /home/ec2-user/.ssh /home/releaseph/.ssh\n",
                    "chown -R releaseph:releaseph /home/releaseph/.ssh\n",
                    "chmod +w /etc/sudoers.d/cloud-init\n",
                    "sed -i -e 's/ec2-user/releaseph/g' /etc/sudoers.d/cloud-init\n",
                    "chmod -w /etc/sudoers.d/cloud-init\n",
                    "userdel -r ec2-user"
                ] ] } }
            }
        },

        "NatPublicIp": {
            "DependsOn": [ "InternetGateway", "InternetGatewayAttachment" ],
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "InstanceId": { "Ref": "NatInstance" },
                "Domain": "vpc"
            }
        },

        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "routetable", { "Ref": "vpcEnv" }, "private" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "PrivateRoute": {
            "DependsOn": [ "NatInstance" ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateRouteTable" },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": { "Ref": "NatInstance" }
            }
        },

        "AppSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "AppSubnetA" },
                "RouteTableId": { "Ref": "PrivateRouteTable" }
            }
        },

        "AppSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "AppSubnetB" },
                "RouteTableId": { "Ref": "PrivateRouteTable" }
            }
        },

        "DataSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "DataSubnetA" },
                "RouteTableId": { "Ref": "PrivateRouteTable" }
            }
        },

        "DataSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "DataSubnetB" },
                "RouteTableId": { "Ref": "PrivateRouteTable" }
            }
        },

        "MgmtPeeringConnection": {
            "Condition": "CreateMgmtPeering",
            "Type": "AWS::EC2::VPCPeeringConnection",
            "Properties": {
                "PeerVpcId": { "Ref": "mgmtVpcId" },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [
                    { "Key": "Name", "Value": { "Fn::Join": ["-", [ "peering", { "Ref": "vpcEnv" }, "mgmt" ] ] } },
                    { "Key": "Business", "Value": { "Ref": "business" } }
                ]
            }
        },

        "ToMgmtVpcPrivateRoute": {
            "Condition": "CreateMgmtPeering",
            "DependsOn": "MgmtPeeringConnection",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "PrivateRouteTable" },
                "DestinationCidrBlock": { "Ref": "mgmtVpcCidr" },
                "VpcPeeringConnectionId": { "Ref": "MgmtPeeringConnection" }
            }
        },

        "FromMgmtVpcPrivateRoute": {
            "Condition": "CreateMgmtPeering",
            "DependsOn": "MgmtPeeringConnection",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "mgmtVpcPrivateRouteTable" },
                "DestinationCidrBlock": { "Ref": "vpcCidr" },
                "VpcPeeringConnectionId": { "Ref": "MgmtPeeringConnection" }
            }
        },

        "ToMgmtVpcPublicRoute": {
            "Condition": "CreateMgmtPeering",
            "DependsOn": "MgmtPeeringConnection",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "PublicRouteTable" },
                "DestinationCidrBlock": { "Ref": "mgmtVpcCidr" },
                "VpcPeeringConnectionId": { "Ref": "MgmtPeeringConnection" }
            }
        },

        "FromMgmtVpcPublicRoute": {
            "Condition": "CreateMgmtPeering",
            "DependsOn": "MgmtPeeringConnection",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": { "Ref": "mgmtVpcPublicRouteTable" },
                "DestinationCidrBlock": { "Ref": "vpcCidr" },
                "VpcPeeringConnectionId": { "Ref": "MgmtPeeringConnection" }
            }
        }

    },

    "Outputs": {
        "vpcId": {
            "Description": "Logical ID of Vpc",
            "Value": { "Ref": "Vpc" }
        },

        "vpcCidr": {
            "Description": "CIDR address of VPC",
            "Value": { "Ref": "vpcCidr" }
        },

        "devHostedZoneId": {
            "Condition": "DevQaVpc",
            "Description": "Logical ID of DevHostedZone",
            "Value": { "Ref": "DevHostedZone" }
        },

        "devHostedZoneName": {
            "Condition": "DevQaVpc",
            "Description": "Dev hosted zone name",
            "Value": { "Fn::Join": [".", [ "dev", { "Ref": "hostedZoneName" } ] ] }
        },

        "qaHostedZoneId": {
            "Condition": "DevQaVpc",
            "Description": "Logical ID of QaHostedZone",
            "Value": { "Ref": "QaHostedZone" }
        },

        "qaHostedZoneName": {
            "Condition": "DevQaVpc",
            "Description": "QA hosted zone name",
            "Value": { "Fn::Join": [".", [ "qa", { "Ref": "hostedZoneName" } ] ] }
        },

        "internetGatewayId": {
            "Description": "Logical ID of InternetGateway",
            "Value": { "Ref": "InternetGateway" }
        },

        "appSubnetAId": {
            "Description": "Logical ID of AppSubnetA",
            "Value": { "Ref": "AppSubnetA" }
        },

        "appSubnetBId": {
            "Description": "Logical ID of AppSubnetB",
            "Value": { "Ref": "AppSubnetB" }
        },

        "dataSubnetAId": {
            "Description": "Logical ID of DataSubnetA",
            "Value": { "Ref": "DataSubnetA" }
        },

        "dataSubnetBId": {
            "Description": "Logical ID of DataSubnetB",
            "Value": { "Ref": "DataSubnetB" }
        },

        "serviceSubnetAId": {
            "Description": "Logical ID of ServiceSubnetA",
            "Value": { "Ref": "ServiceSubnetA" }
        },

        "serviceSubnetBId": {
            "Description": "Logical ID of ServiceSubnetB",
            "Value": { "Ref": "ServiceSubnetB" }
        },

        "publicRouteTableId": {
            "Description": "Logical ID of PublicRouteTable",
            "Value": { "Ref": "PublicRouteTable" }
        },

        "privateRouteTableId": {
            "Description": "Logical ID of PrivateRouteTable",
            "Value": { "Ref": "PrivateRouteTable" }
        },

        "natInstanceId": {
            "Description": "Logical ID of NatInstance",
            "Value": { "Ref": "NatInstance" }
        },

        "natSecurityGroupId": {
            "Description": "Logical ID of NatSecurityGroup",
            "Value": { "Ref": "NatSecurityGroup" }
        },

        "mgmtPeeringConnectionId": {
            "Condition": "CreateMgmtPeering",
            "Description": "Logical ID of MgmtPeeringConnection",
            "Value": { "Ref": "MgmtPeeringConnection" }
        }
    }
}
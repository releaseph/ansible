---
- name: Create VPC
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Get hosted zone info
      cloudformation_stack_facts: stack_name=hostedzone region={{ region }}
      register: hostedzone
    - name: Get management vpc info
      cloudformation_stack_facts: stack_name=vpc-mgmt region={{ region }}
      register: mgmtvpc
      when: vpc_env == "devqa" or vpc_env == "uatprod"
    - name: Set mgmt_vpc_id fact
      set_fact:
        mgmt_vpc_id: "{{ mgmtvpc.stack_outputs.vpcId }}"
        mgmt_vpc_cidr: "{{ mgmtvpc.stack_outputs.vpcCidr }}"
        mgmt_vpc_private_route_table: "{{ mgmtvpc.stack_outputs.privateRouteTableId }}"
        mgmt_vpc_public_route_table: "{{ mgmtvpc.stack_outputs.publicRouteTableId }}"
      when: vpc_env == "devqa" or vpc_env == "uatprod"
    - name: Create VPC stack
      cloudformation:
        region: "{{ region }}"
        stack_name: "vpc-{{ vpc_env }}"
        state: present
        template: "../cf_templates/json/vpc.json"
        template_parameters:
          region: "{{ region }}"
          vpcCidr: "{{ vpc_cidr }}"
          vpcEnv: "{{ vpc_env }}"
          appSubnets: "{{ app_subnets }}"
          dataSubnets: "{{ data_subnets }}"
          serviceSubnets: "{{ service_subnets }}"
          sshKey: "{{ ssh_key }}"
          hostedZoneName: "{{ hostedzone.stack_outputs.hostedZoneName }}"
          business: "{{ business }}"
          mgmtVpcId: "{{ mgmt_vpc_id | default('') }}"
          mgmtVpcCidr: "{{ mgmt_vpc_cidr | default ('') }}"
          mgmtVpcPrivateRouteTable: "{{ mgmt_vpc_private_route_table | default ('') }}"
          mgmtVpcPublicRouteTable: "{{ mgmt_vpc_public_route_table | default ('') }}"

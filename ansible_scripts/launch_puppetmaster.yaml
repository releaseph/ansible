---
- name: Launch Puppetmaster
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - "../{{ env }}/group_vars/puppetmaster"
  tasks:
    - name: Get hosted zone info
      cloudformation_stack_facts: stack_name=hostedzone region={{ region }}
      register: hostedzone
    - name: Get vpc info
      cloudformation_stack_facts: stack_name=vpc-{{ vpc_env }} region={{ region }}
      register: vpc
    - name: Create Puppetmaster stack
      cloudformation:
        region: "{{ region }}"
        stack_name: "puppetmaster-{{ vpc_env }}"
        state: present
        template: "../cf_templates/json/puppetmaster.json"
        template_parameters:
          vpcCidr: "{{ vpc_cidr }}"
          vpcEnv: "{{ vpc_env }}"
          vpcId: "{{ vpc.stack_outputs.vpcId }}"
          ami: "{{ ami }}"
          instanceType: "{{ instance_type }}"
          sshKey: "{{ ssh_key }}"
          serviceSubnetAId: "{{ vpc.stack_outputs.serviceSubnetAId }}"
          puppetEnv: "{{ env }}"
          puppetRole: "{{ puppet_role }}"
          hostedZoneId: "{{ hostedzone.stack_outputs.hostedZoneId }}"
          hostedZoneName: "{{ hostedzone.stack_outputs.hostedZoneName }}"
          devHostedZoneId: "{{ vpc.stack_outputs.devHostedZoneId }}"
          devHostedZoneName: "{{ vpc.stack_outputs.devHostedZoneName }}"
          qaHostedZoneId: "{{ vpc.stack_outputs.qaHostedZoneId }}"
          qaHostedZoneName: "{{ vpc.stack_outputs.qaHostedZoneName }}"
